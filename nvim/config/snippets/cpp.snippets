# Generated by snippet-converter.nvim (https://github.com/smjonas/snippet-converter.nvim)

snippet def Code snippet for #define " "
	#define $0
snippet #if Code snippet for #if
	#if ${1:0}
	$0
	#endif // $1
snippet #ifndef Code snippet for #ifndef
	#ifndef ${1:DEBUG}
	$0
	#endif // !$1
snippet #inc Code snippet for #include " "
	#include "$0"
snippet #inc< Code snippet for #include < >
	#include <$0>
snippet main A standard main function for a C++ program
	int main (int argc, char *argv[])
	{
		$1
		return 0;
	}
snippet cin Code snippet for std::cin, provided the header is set
	std::cin >> $1;
snippet class Code snippet for class
	class ${1:MyClass}
	{
	public:
		$1();
		$1($1 &&) = default;
		$1(const $1 &) = default;
		$1 &operator=($1 &&) = default;
		$1 &operator=(const $1 &) = default;
		~$1();
	
	private:
		$2
	};
	
	$1::$1()
	{
	}
	
	$1::~$1()
	{
	}
snippet classi Code snippet for class with inline constructor/destructor
	class ${1:MyClass}
	{
	public:
		$1() = default;
		$1($1 &&) = default;
		$1(const $1 &) = default;
		$1 &operator=($1 &&) = default;
		$1 &operator=(const $1 &) = default;
		~$1() = default;
	
	private:
		$2
	};
snippet cout Code snippet for printing to std::cout, provided the header is set
	std::cout << "${1:message}" << std::endl;
snippet do Code snippet for do...while loop
	do
	{
		$0
	} while($1);
snippet eclass Code snippet for empty class
	class ${1:MyClass}
	{
	public:
		$2
	private:
		$3
	};
	
snippet else Code snippet for else statement
	else {
		$0
	}
snippet else if Code snippet for else-if statement
	else if ($1) {
		$0
	}
snippet enum Code snippet for enum
	enum ${1:MyEnum} {
		$0
	};
snippet enum class Code snippet for enum class (c++11)
	enum class ${1:MyClass} {$0};
snippet for Code snippet for 'for' loop
	for (${1:size_t} ${2:i} = ${3:0}; $2 < ${4:length}; $2++) {
		$0
	}
snippet foreach Code snippet for range-based for loop (c++11) statement
	for(${1:auto} ${2:var} : ${3:collection_to_loop})
	{
		$0
	}
snippet forr Code snippet for reverse 'for' loop
	for (${1:size_t} ${2:i} = ${3:length} - 1; $2 >= ${4:0}; $2--) {
		$0
	}
snippet fprintf Generic fprintf() snippet
	fprintf(${1:stderr}, "$2\\n"$0);
snippet fscanf Generic fscanf() snippet
	fscanf($1, "$2"$0);
snippet if Code snippet for if statement
	if ($1) {
		$0
	}
snippet interface Code snippet for interface (Visual C++)
	__interface I${1:Interface}
	{
		$0
	};
snippet namespace
	namespace ${1:MyNamespace}
	{
		$0
	}
snippet printf Generic printf() snippet
	printf("$1\\n"$0);
snippet qclass Code snippet for empty Qt class
	class ${1:MyClass} : public QObject
	{
		Q_OBJECT;
	public:
	
	explicit $1(QObject *parent = nullptr);
		$2
	signals:
	
	public slots:
	};
	
snippet scanf Generic scanf() snippet
	scanf("$1"$0);
snippet sprintf Generic sprintf() snippet
	sprintf($1, "$2\\n"$0);
snippet sscanf Generic sscanf() snippet
	sscanf($1, "$2"$0);
snippet struct Code snippet for struct
	struct ${1:MyStruct}
	{
		$0
	};
snippet switch Code snippet for switch statement
	switch (${1:switch_on}) {
		default:
			$0
			break;
	}
snippet try Code snippet for try catch
	try {
		
	}
	catch (const std::exception&) {
		$1
	}
snippet union Code snippet for union
	union ${1:MyUnion}
	{
		$0
	};
snippet while 
	while ($1)
	{
		$2
	}
