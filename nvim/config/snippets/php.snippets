# Generated by snippet-converter.nvim (https://github.com/smjonas/snippet-converter.nvim)

snippet this $this->...
	\$this->$0;
snippet if? Ternary conditional assignment
	\$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b} ;
snippet shorray Array initializer
	\$${1:arrayName} = ['$2' => $3${4:,} $0];
snippet array Array initializer
	\$${1:arrayName} = array('$2' => $3${4:,} $0);
snippet doc_class Documented Class Declaration
	/**
	 * ${6:undocumented class}
	 */
	class ${1:ClassName} ${2:extends ${3:AnotherClass}} ${4:implements ${5:Interface}} {
		$0
	}
	
snippet doc_f Documented function
	/**
	 * ${1:undocumented function summary}
	 *
	 * ${2:Undocumented function long description}
	 *
	${3: * @param ${4:Type} \$${5:var} ${6:Description}}
	${7: * @return ${8:type}}
	${9: * @throws ${10:conditon}}
	 **/
	${11:public }function ${12:FunctionName}(${13:${14:${4:Type} }\$${5:var}${15: = ${16:null}}}) {
		${0:# code...}
	}
snippet param Paramater documentation
	* @param ${1:Type} ${2:var} ${3:Description}$0
snippet doc_v Documented Class Variable
	/** @var ${1:Type} \$${2:var} ${3:description} */
	${4:protected} \$${2:var}${5: = ${6:null}};$0
snippet #endregion Folding Region End
	#endregion
snippet #region Folding Region Start
	#region
snippet throw Throw exception
	throw new $1Exception(${2:"${3:Error Processing Request}"}${4:, ${5:1}});
	$0
snippet try Try catch block
	try {
		${1://code...}
	} catch (${2:\\Throwable} ${3:\$th}) {
		${4://throw \$th;}
	}
snippet case Case Block
	case '${1:value}':
		${0:# code...}
		break;
snippet class Class definition
	class ${1:ClassName} ${2:extends ${3:AnotherClass}} ${4:implements ${5:Interface}} {
		$0
	}
	
snippet def Definition
	define('$1', ${2:'$3'});
	$0
snippet do Do-While loop
	do {
		${0:# code...}
	} while (${1:\$${2:a} <= ${3:10}});
snippet ethis Echo this
	echo \$this->$0;
snippet else Else block
	else {
		${0:# code...}
	}
snippet elseif Elseif block
	elseif (${1:condition}) {
		${0:# code...}
	}
snippet for For-loop
	for (\$${1:i}=${2:0}; \$${1:i} < $3; \$${1:i}++) { 
		${0:# code...}
	}
snippet foreach Foreach loop
	foreach (\$${1:variable} as \$${2:key} ${3:=> \$${4:value}}) {
		${0:# code...}
	}
snippet con
	${1:public} function __construct(${2:${3:Type} \$${4:var}${5: = ${6:null}}}) {
		\$this->${4:var} = \$${4:var};$0
	}
snippet fun Function
	${1:public }function ${2:FunctionName}(${3:${4:${5:Type} }\$${6:var}${7: = ${8:null}}}) {
		${0:# code...}
	}
snippet if If block
	if (${1:condition}) {
		${0:# code...}
	}
snippet ifelse If Else block
	if (${1:condition}) {
		${2:# code...}
	} else {
		${3:# code...}
	}
	$0
snippet switch Switch block
	switch (\$${1:variable}) {
		case '${2:value}':
			${3:# code...}
			break;
		$0
		default:
			${4:# code...}
			break;
	}
snippet trait Trait
	/**
	 * $1
	 */
	trait ${2:TraitName}
	{
		$0
	}
	
snippet while While-loop
	while (${1:\$${2:a} <= ${3:10}}) {
		${0:# code...}
	}
snippet keyval Key-Value initializer
	'$1' => $2${3:,} $0
