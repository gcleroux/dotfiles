# Generated by snippet-converter.nvim (https://github.com/smjonas/snippet-converter.nvim)

snippet alterad Alter table - Add column
	ALTER TABLE ${1:tableName}
		ADD COLUMN ${2:col_name};
snippet alteraf Alter table - Add column after
	ALTER TABLE ${1:tableName}
		ADD COLUMN ${2:col_name}
		AFTER ${5:col_name};
snippet alterdb Alter database
	ALTER DATABASE ${1:dbName}
		CHARACTER SET ${2:charset}
		COLLATE ${3:utf8_unicode_ci};
snippet altert Alter table
	ALTER TABLE ${1:tableName}
		 ${2:intructions};
snippet bakupd Backup database
	BACKUP DATABASE ${1:dbName}
		TO DISK ${2:filepath};
snippet bakupdw Diferencial backup database
	BACKUP DATABASE ${1:dbName}
		TO DISK ${2:filepath}
		WITH ${3:DIFERENTIAL};
snippet check Check
	CHECK ( ${1:condition} )
snippet created Create regular table
	CREATE DATABASE ${1:name};
snippet createdi Create table with conditional
	CREATE DATABASE IF NOT EXISTS ${1:name};
snippet createt Create regular table
	CREATE TABLE ${1:tableName} (
		${2:attribute(s)}
	);
snippet createti Create table with conditional
	CREATE TABLE IF NOT EXISTS ${1:tableName} (
		${2:attribute(s)}
	);
snippet createuser Create User
	CREATE USER '${1:username}'@'${2:localhost}' IDENTIFIED BY '${3:password}';
snippet delete Delete records
	DELETE FROM ${1:tableName}
		WHERE ${3:condition};
snippet deleteuser Delete user
	DELETE FROM mysql.user WHERE user = '${1:userName}';
snippet dropd Drop database
	DROP DATABASE ${1:dbName};
snippet dropdi Drop database with conditional
	DROP DATABASE IF EXISTS ${1:dbName};
snippet dropt Drop table
	DROP TABLE ${1:tableName};
snippet dropti Drop table with conditional
	DROP TABLE IF EXISTS ${1:tableName};
snippet fjoin Full Join
	SELECT ${1:attribute(s)}
		FROM ${2:tableName}
		FULL JOIN OUTER ${3:tableName2}
		ON ${4:match}
		WHERE ${5:condition};
snippet foreingk Foreing Key
	FOREIGN KEY(${1:attribute}) REFERENCES ${2:tableName}(${3:attribute})
snippet foreingkc Constraint foreing Key
	CONSTRAINT ${1:attribute} FOREIGN KEY (${2:attribute(s)})
		REFERENCES ${3:tableName}(${4:attribute})
snippet grantuser Grant privileges
	GRANT ALL PRIVILEGES ON ${1:db}.${2:tb} TO '${3:user_name}'@'${4:localhost}';
snippet groupb Group by
	SELECT ${1:attribute(s)}
		FROM ${2:tableName}
		ORDER BY ${3:attribute(s)};
snippet ijoin Inner Join
	SELECT ${1:attribute(s)}
		FROM ${2:tableName}
		INNER JOIN ${3:tableName2}
		ON ${4:match};
snippet insert Insert value(s)
	INSERT INTO ${1:tableName} (
		${2:attribute(s)}
	) VALUES ( ${3:values} )
snippet ljoin Left Join
	SELECT ${1:attribute(s)}
		FROM ${2:tableName}
		LEFT JOIN ${3:tableName2}
		ON ${4:match};
snippet primaryk Primary Key
	PRIMARY KEY(${1:attribute})
snippet primarykc Constraint rimary Key
	CONSTRAINT ${1:attribute} PRIMARY KEY(${2:attribute(s)})
snippet rjoin Right Join
	SELECT ${1:attribute(s)}
		FROM ${2:tableName}
		RIGHT JOIN ${3:tableName2}
		ON ${4:match};
snippet select Regular select
	SELECT ${1:attribute(s)} FROM ${2:tableName};
snippet selectd Select Distinct
	SELECT DISTINCT ${1:attribute(s)}
		FROM ${2:tableName};
snippet selector Select with order
	SELECT ${1:attribute(s)}
		FROM ${2:tableName}
		ORDER BY ${3:attribute(s)} ${4:ASC|DESC};
snippet selectw Select with condition
	SELECT ${1:attribute(s)}
		FROM ${2:tableName}
		WHERE ${3:condition};
snippet showd Show databases
	SHOW DATABASES;
snippet showt Show tables
	SHOW TABLES;
snippet union Regular union
	SELECT ${1:attribute(s)} FROM ${2:tableName}
	UNION
	SELECT ${3:attribute(s)} FROM ${4:tableName2};
snippet uniona All union
	SELECT ${1:attribute(s)} FROM ${2:tableName}
	UNION ALL
	SELECT ${3:attribute(s)} FROM ${4:tableName2};
snippet updatet Update table
	UPDATE ${1:tableName}
		SET ${2:attribute(s)}
		WHERE ${3:condition};
