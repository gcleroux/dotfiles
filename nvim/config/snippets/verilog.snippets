# Generated by snippet-converter.nvim (https://github.com/smjonas/snippet-converter.nvim)

snippet ini Initial Begin
	initial begin
		$0
	end
snippet al Always block
	always @(${1:Sensitive list}) begin
	
		$0
	
	end
snippet case Case Statement
	case (${1:variable})
		${2: value}: begin
			$3
		end
	default: begin
		$4
	
	end
	endcase
snippet casez Casez Statement
	casez (${1:variable})
		${2: value}: begin
			$3
		end
	default: begin
		$4
	
	end
	endcase
snippet el else-if statement
	else begin
	
	$0
	
	end
snippet eif else-if statement
	else if ($1) begin
	
	$0
	
	end
snippet for For loop
	for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) begin
	
		$4
	
	end
snippet forev Forever loop
	forever begin
		$0
	end
snippet fun Function snippet
	function ${1:void} ${2:name}($3);
	
		$0
	endfunction: $2
snippet if If statement
	if ($1) begin
	
	$0
	
	end
snippet ife If-else statement
	if ($1) begin
	
		$2
	
	end
	
	else begin
	
		$3
	
	end
snippet mod Module Block
	module ${1:FILENAME} ($2)
	
		$0
	
	endmoudle
snippet repeat (${1}) begin Repeat loop
	repeat ($1) begin
		$0
	end
snippet task Task snippet
	task ${1:name}($2);
	
		$0
	
	endtask: $1
snippet tde Typedef enum
	typedef enum ${2:logic[15:0]} 
	{
	
	${3:REG = 16'h0000}
	
	} ${1:my_dest_t};
snippet tdsp Typedef struct packed
	typedef struct packed {
	
		int ${2:data};
	
	${1:name}
snippet wh While loop
	whlie ($1) begin
		$0
	end
