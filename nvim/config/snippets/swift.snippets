# Generated by snippet-converter.nvim (https://github.com/smjonas/snippet-converter.nvim)

snippet class class declaration
	class ${1:Name} {
	
		$0
	}
snippet do do statement
	do {
		$0
	} catch ${1:error} {
		$2
	}
snippet else else clause
	else {
		$0
	}
snippet elif else clause with a nested if statement
	else if ${1:condition} {
		$0
	}
snippet enum enum declaration
	enum ${1:Name} {
	
		case $0
	}
snippet extension extension declaration
	extension ${1:Type} {
	
		$0
	}
snippet for for-in statement
	for ${1:item} in ${2:collection} {
		$0
	}
snippet func function declaration
	func ${1:name}(${2:parameters}) -> ${3:Type} {
		$0
	}
snippet guard guard statement
	guard ${1:condition} else {
		$0
	}
snippet guardlet guard statement with optional binding
	guard let ${1:value} = ${2:optional} else {
		$0
	}
snippet if if statement
	if ${1:condition} {
		$0
	}
snippet iflet if statement with optional binding
	if let ${1:value} = ${2:optional} {
		$0
	}
snippet print print("...")
	print("$1")
	$0
snippet printv print("\(...)")
	print("\\($1)")
	$0
snippet protocol protocol declaration
	protocol ${1:Name} {
	
		$0
	}
snippet repeat repeat-while statement
	repeat {
		$0
	} while ${1:condition}
snippet struct struct declaration
	struct ${1:Name} {
	
		$0
	}
snippet switch switch statement
	switch ${1:value} {
	case ${2:pattern}:
		$0
	default:
		
	}
snippet while while statement
	while ${1:condition} {
		$0
	}
